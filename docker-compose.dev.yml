version: '3'
services:
  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: teatr
    networks: 
      - customnetwork
    ports:
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - postgres
    networks: 
      - customnetwork

  pgadmin: 
    image: dpage/pgadmin4:6.13
    restart: always
    ports:
      - 9000:80
    depends_on:
      - postgres
    networks: 
      - customnetwork
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.ru
      - PGADMIN_DEFAULT_PASSWORD=123456

  expressjs:
    build: 
      context: ./expressjs
      dockerfile: Dockerfile.dev
    container_name: expressjs
    depends_on:
      - postgres
    volumes:
      - ./expressjs:/usr/src/app
    ports:
      - 8001:8001
    networks: 
      - customnetwork

  #fastapi:
    #build: 
      #context: ./fastapi
      #dockerfile: Dockerfile.dev
    #container_name: fastapi
    #depends_on:
      #- postgres
    #volumes:
      #- ./fastapi:/usr/src/app
    #ports:
      #- 8000:8000
    #networks: 
      #- customnetwork
  
  #nextjs:
  #    build: 
  #      context: ./nextjs
  #      dockerfile: Dockerfile
  #    container_name: nextjs
  #    volumes:
  #      - ./nextjs:/usr/src/app
  #    ports:
  #      - 3000:3000
  #    networks: 
  #      - customnetwork

  frontend:
      build: 
        context: ./frontend
        dockerfile: Dockerfile.dev
      container_name: frontend
      volumes:
        - ./frontend:/usr/src/app
      ports:
        - 5173:5173
      networks: 
        - customnetwork

  reverse-proxy:
    image: nginx:1.20.0
    container_name: nginx
    restart: unless-stopped
    depends_on:
      - expressjs
      - frontend
      #- fastapi
    ports:
        - '80:80'
    links:
        - expressjs
        #- fastapi
        - postgres
        - adminer
    networks:
        - customnetwork
    volumes:
        - './expressjs/storage:/var/www/back-storage'
        #- './fastapi/storage:/var/www/back-storage'
        #- './nextjs/storage:/var/www/front-storage'
        - './frontend/dist:/var/www/reservations'
        - './nginx:/var/log/nginx'
        - './nginx/dev/conf.d:/etc/nginx/conf.d'



networks:
  customnetwork:
    external: False
